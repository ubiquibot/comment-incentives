name: Delegated Compute Workflow
on:
  workflow_dispatch:
    inputs:
      eventName:
        description: "Event name"
        required: true
      event:
        description: "Event payload"
        required: true
      authToken:
        description: "Authentication token"
        required: true
      settings:
        description: "Plugin settings"
        required: true
      ref:
        description: "Branch name, tag name, or commit SHA"
        required: false

jobs:
  handler-job:
    runs-on: ubuntu-latest
    steps:
      - name: Event name
        run: echo ${{ inputs.eventName }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "20.10.0"

      - name: Calling action
        uses: ./ # Uses an action in the root directory
        id: callback
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          X25519_PRIVATE_KEY: ${{ secrets.X25519_PRIVATE_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          UBIQUIBOT_APP_ID: ${{ secrets.UBIQUIBOT_APP_ID }}
          UBIQUIBOT_APP_PRIVATE_KEY: ${{ secrets.UBIQUIBOT_APP_PRIVATE_KEY }}

      # - name: Get Bot Token
      #   uses: tibdex/github-app-token@v1.7.0
      #   id: get_installation_token
      #   with:
      #     app_id: ${{ secrets.UBIQUIBOT_APP_ID }}
      #     private_key: ${{ secrets.UBIQUIBOT_APP_PRIVATE_KEY }}

      # - name: Post comment to the original repo as Bot
      #   uses: actions/github-script@v6
      #   with:
      #     github-token: ${{ steps.get_installation_token.outputs.token }}
      #     script: |
      #       await github.rest.issues.createComment({
      #         owner: "${{ inputs.issueOwner }}",
      #         repo: "${{ inputs.issueRepository }}",
      #         issue_number: "${{ inputs.issueNumber }}",
      #         body: `${{ steps.callback.outputs.result }}`
      #       });
